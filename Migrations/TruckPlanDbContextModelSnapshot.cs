// <auto-generated />
using System;
using DFDSTruckPlan.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DFDSTruckPlan.Migrations
{
    [DbContext(typeof(TruckPlanDbContext))]
    partial class TruckPlanDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DFDSTruckPlan.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1970, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(1985, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jane Smith"
                        });
                });

            modelBuilder.Entity("DFDSTruckPlan.Models.GPSDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("GPSDevices");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        });
                });

            modelBuilder.Entity("DFDSTruckPlan.Models.GPSPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GPSDeviceId")
                        .HasColumnType("int");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GPSDeviceId");

                    b.ToTable("GPSPositions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GPSDeviceId = 1,
                            Latitude = 52.520000000000003,
                            Longitude = 13.404999999999999,
                            TimeStamp = new DateTime(2024, 9, 30, 22, 25, 40, 123, DateTimeKind.Local).AddTicks(9056)
                        },
                        new
                        {
                            Id = 2,
                            GPSDeviceId = 1,
                            Latitude = 48.8566,
                            Longitude = 2.3521999999999998,
                            TimeStamp = new DateTime(2024, 9, 30, 22, 25, 40, 123, DateTimeKind.Local).AddTicks(9119)
                        },
                        new
                        {
                            Id = 3,
                            GPSDeviceId = 2,
                            Latitude = 51.507399999999997,
                            Longitude = -0.1278,
                            TimeStamp = new DateTime(2024, 9, 30, 22, 25, 40, 123, DateTimeKind.Local).AddTicks(9124)
                        });
                });

            modelBuilder.Entity("DFDSTruckPlan.Models.Truck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GPSDeviceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GPSDeviceId");

                    b.ToTable("Trucks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GPSDeviceId = 1
                        },
                        new
                        {
                            Id = 2,
                            GPSDeviceId = 2
                        });
                });

            modelBuilder.Entity("DFDSTruckPlan.Models.TruckPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TruckId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("TruckId");

                    b.ToTable("TruckPlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DriverId = 1,
                            EndTime = new DateTime(2024, 9, 30, 22, 25, 40, 123, DateTimeKind.Local).AddTicks(9174),
                            StartTime = new DateTime(2024, 9, 30, 17, 25, 40, 123, DateTimeKind.Local).AddTicks(9167),
                            TruckId = 1
                        },
                        new
                        {
                            Id = 2,
                            DriverId = 2,
                            EndTime = new DateTime(2024, 9, 30, 22, 25, 40, 123, DateTimeKind.Local).AddTicks(9181),
                            StartTime = new DateTime(2024, 9, 30, 16, 25, 40, 123, DateTimeKind.Local).AddTicks(9178),
                            TruckId = 2
                        });
                });

            modelBuilder.Entity("DFDSTruckPlan.Models.GPSPosition", b =>
                {
                    b.HasOne("DFDSTruckPlan.Models.GPSDevice", null)
                        .WithMany("GPSPositions")
                        .HasForeignKey("GPSDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DFDSTruckPlan.Models.Truck", b =>
                {
                    b.HasOne("DFDSTruckPlan.Models.GPSDevice", "GPSDevice")
                        .WithMany()
                        .HasForeignKey("GPSDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GPSDevice");
                });

            modelBuilder.Entity("DFDSTruckPlan.Models.TruckPlan", b =>
                {
                    b.HasOne("DFDSTruckPlan.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DFDSTruckPlan.Models.Truck", "Truck")
                        .WithMany()
                        .HasForeignKey("TruckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Truck");
                });

            modelBuilder.Entity("DFDSTruckPlan.Models.GPSDevice", b =>
                {
                    b.Navigation("GPSPositions");
                });
#pragma warning restore 612, 618
        }
    }
}
